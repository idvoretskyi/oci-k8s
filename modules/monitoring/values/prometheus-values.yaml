# Default values for kube-prometheus-stack
# This file contains the essential settings for OCI K8s cluster

grafana:
  enabled: true
  # Password will be set via Helm values when deployed
  # adminPassword: will be passed from variables
  persistence:
    enabled: true
    size: 8Gi  # Increased from 5Gi for better performance
  
  plugins:
    - grafana-piechart-panel
    - grafana-worldmap-panel
    - grafana-oracle-cloud-infrastructure-datasource
    - grafana-kubernetes-app
    - grafana-singlestat-panel
    - grafana-clock-panel
  
  serviceMonitor:
    enabled: true
    labels:
      release: monitoring
  
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
      - name: 'oci'
        orgId: 1
        folder: 'OCI Resources'
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/oci
      - name: 'cost'
        orgId: 1
        folder: 'Cost Analysis'
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/cost

  dashboards:
    default:
      k8s-cluster-overview:
        gnetId: 15661
        revision: 1
        datasource: Prometheus
      k8s-pod-monitoring:
        gnetId: 15636
        revision: 1
        datasource: Prometheus
      node-exporter:
        gnetId: 1860
        revision: 30
        datasource: Prometheus
      kubernetes-apiserver:
        gnetId: 12006
        revision: 1
        datasource: Prometheus
      k8s-resources-cluster:
        gnetId: 11802
        revision: 1
        datasource: Prometheus
      k8s-resources-workloads-namespace:
        gnetId: 8670
        revision: 1
        datasource: Prometheus
    oci:
      oci-compute-overview:
        gnetId: 16902
        revision: 1
        datasource: Prometheus
      oci-network-monitoring:
        gnetId: 17003
        revision: 1
        datasource: Prometheus
      oci-storage-monitoring:
        gnetId: 17154
        revision: 1
        datasource: Prometheus
      oci-load-balancer:
        gnetId: 17324
        revision: 1
        datasource: Prometheus
    cost:
      k8s-cost-analysis:
        gnetId: 9527
        revision: 1
        datasource: Prometheus

prometheus:
  enabled: true
  prometheusSpec:
    retention: ${retention}
    resources:
      requests:
        memory: 2Gi
        cpu: 750m
      limits:
        memory: 4Gi
        cpu: 1500m
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: ${storage_class}
          resources:
            requests:
              storage: ${storage_size}
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}
    podMonitorSelectorNilUsesHelmValues: false
    podMonitorSelector: {}
    podMonitorNamespaceSelector: {}
    
    # Improved scrape configs for OCI environment
    additionalScrapeConfigs:
      - job_name: 'oci-metrics'
        scrape_interval: 60s
        metrics_path: /metrics
        scheme: https
        tls_config:
          insecure_skip_verify: true
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
            action: replace
            target_label: __scheme__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: (.+):(?:\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_region]
            action: replace
            target_label: oci_region
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: replace
            target_label: app
      - job_name: 'oci-cloud-metrics'
        scrape_interval: 300s
        metrics_path: /metrics/oci
        scheme: https
        tls_config:
          insecure_skip_verify: true
        honor_labels: true
        static_configs:
          - targets: ['${oci_metric_exporter:prometheus-oci-exporter:9011}']
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_region]
            action: replace
            target_label: oci_region
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_compartment]
            action: replace
            target_label: oci_compartment

alertmanager:
  enabled: true
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: ${storage_class}
          resources:
            requests:
              storage: 5Gi
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      limits:
        memory: 512Mi
        cpu: 200m
    # Enhanced alertmanager configuration
    config:
      global:
        resolve_timeout: 5m
      route:
        group_by: ['job', 'alertname', 'severity']
        group_wait: 30s
        group_interval: 5m
        repeat_interval: 12h
        receiver: 'null'
        routes:
        - match:
            alertname: Watchdog
          receiver: 'null'
        - match:
            severity: critical
          receiver: 'pager'
        - match:
            severity: warning
          receiver: 'email'
      receivers:
      - name: 'null'
      - name: 'pager'
        webhook_configs:
        - url: '${pagerduty_url}'
          send_resolved: true
      - name: 'email'
        email_configs:
        - to: '${alert_email}'
          from: '${alert_email_from}'
          smarthost: '${smtp_server}:587'
          auth_username: '${smtp_user}'
          auth_password: '${smtp_password}'
          send_resolved: true

# Kubernetes state metrics for OCI environment
kubeStateMetrics:
  enabled: true
  serviceMonitor:
    metricRelabelings:
      - action: keep
        regex: kube_(daemonset|deployment|pod|namespace|node|statefulset|persistentvolume|persistentvolumeclaim|resourcequota)_.*
        sourceLabels: [__name__]

# Node exporter configuration
nodeExporter:
  enabled: true
  serviceMonitor:
    enabled: true
    relabelings:
      - action: replace
        regex: (.*)
        replacement: $1
        sourceLabels:
          - __meta_kubernetes_pod_node_name
        targetLabel: kubernetes_node
  resources:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 100Mi

# Adding OCI exporter for cloud metrics
ociMetricsExporter:
  enabled: true
  image:
    repository: ghcr.io/oracle-samples/oci-metrics-exporter
    tag: v1.2.0
  resources:
    requests:
      memory: 200Mi
      cpu: 100m
    limits:
      memory: 400Mi
      cpu: 200m
  serviceMonitor:
    enabled: true
    interval: 5m

# Enable kube-prometheus-stack default rules with additions for OCI
defaultRules:
  create: true
  rules:
    etcd: true
    general: true
    k8s: true
    kubeApiserver: true
    kubePrometheusNodeAlerting: true
    kubePrometheusNodeRecording: true
    kubernetesAbsent: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    node: true
    oci: true # Added OCI-specific rules

# Cost analysis exporter
kubecost:
  enabled: false # Set to true if license is available
  global:
    prometheus:
      enabled: false # Use existing prometheus from stack
